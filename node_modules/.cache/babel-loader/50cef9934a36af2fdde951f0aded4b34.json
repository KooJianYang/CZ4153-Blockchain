{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _require = require(\"ethers\"),\n    ethers = _require.ethers;\n\nvar _require2 = require(\"./config\"),\n    config = _require2.config;\n\nvar ZERO_ADDRESS = config.ZERO_ADDRESS;\n\nvar buildForwardTxRequest = /*#__PURE__*/function () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(account, to, gasLimitNum, data, biconomyForwarder) {\n    var newBatch,\n        batchId,\n        batchNonce,\n        req,\n        _args = arguments;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            newBatch = _args.length > 5 && _args[5] !== undefined ? _args[5] : false;\n\n            if (biconomyForwarder) {\n              _context.next = 3;\n              break;\n            }\n\n            throw new Error(\"Biconomy Forwarder is not defined for current network\");\n\n          case 3:\n            if (!newBatch) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 6;\n            return biconomyForwarder.getBatch(userAddress);\n\n          case 6:\n            _context.t0 = _context.sent;\n            _context.next = 10;\n            break;\n\n          case 9:\n            _context.t0 = 0;\n\n          case 10:\n            batchId = _context.t0;\n            _context.next = 13;\n            return biconomyForwarder.getNonce(account, batchId);\n\n          case 13:\n            batchNonce = _context.sent;\n            req = {\n              from: account,\n              to: to,\n              token: ZERO_ADDRESS,\n              txGas: gasLimitNum,\n              tokenGasPrice: \"0\",\n              batchId: batchId,\n              batchNonce: parseInt(batchNonce),\n              deadline: Math.floor(Date.now() / 1000 + 3600),\n              data: data\n            };\n            return _context.abrupt(\"return\", {\n              request: req\n            });\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function buildForwardTxRequest(_x, _x2, _x3, _x4, _x5) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar getDomainSeperator = function getDomainSeperator(biconomyForwarderDomainData) {\n  var domainSeparator = ethers.utils.keccak256(ethers.utils.defaultAbiCoder.encode([\"bytes32\", \"bytes32\", \"bytes32\", \"address\", \"bytes32\"], [ethers.utils.id(\"EIP712Domain(string name,string version,address verifyingContract,bytes32 salt)\"), ethers.utils.id(biconomyForwarderDomainData.name), ethers.utils.id(biconomyForwarderDomainData.version), biconomyForwarderDomainData.verifyingContract, biconomyForwarderDomainData.salt]));\n  return domainSeparator;\n};\n\nmodule.exports = {\n  buildForwardTxRequest: buildForwardTxRequest,\n  getDomainSeperator: getDomainSeperator\n};","map":{"version":3,"sources":["C:/Users/Koo Jian Yang/Desktop/myTokenTransact/token-dapp/node_modules/@biconomy/mexa/common-js/biconomyforwarder.js"],"names":["_interopRequireDefault","require","_regenerator","_asyncToGenerator2","_require","ethers","_require2","config","ZERO_ADDRESS","buildForwardTxRequest","_ref","mark","_callee","account","to","gasLimitNum","data","biconomyForwarder","newBatch","batchId","batchNonce","req","_args","arguments","wrap","_callee$","_context","prev","next","length","undefined","Error","getBatch","userAddress","t0","sent","getNonce","from","token","txGas","tokenGasPrice","parseInt","deadline","Math","floor","Date","now","abrupt","request","stop","_x","_x2","_x3","_x4","_x5","apply","getDomainSeperator","biconomyForwarderDomainData","domainSeparator","utils","keccak256","defaultAbiCoder","encode","id","name","version","verifyingContract","salt","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _require = require(\"ethers\"),\n    ethers = _require.ethers;\n\nvar _require2 = require(\"./config\"),\n    config = _require2.config;\n\nvar ZERO_ADDRESS = config.ZERO_ADDRESS;\n\nvar buildForwardTxRequest = /*#__PURE__*/function () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(account, to, gasLimitNum, data, biconomyForwarder) {\n    var newBatch,\n        batchId,\n        batchNonce,\n        req,\n        _args = arguments;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            newBatch = _args.length > 5 && _args[5] !== undefined ? _args[5] : false;\n\n            if (biconomyForwarder) {\n              _context.next = 3;\n              break;\n            }\n\n            throw new Error(\"Biconomy Forwarder is not defined for current network\");\n\n          case 3:\n            if (!newBatch) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 6;\n            return biconomyForwarder.getBatch(userAddress);\n\n          case 6:\n            _context.t0 = _context.sent;\n            _context.next = 10;\n            break;\n\n          case 9:\n            _context.t0 = 0;\n\n          case 10:\n            batchId = _context.t0;\n            _context.next = 13;\n            return biconomyForwarder.getNonce(account, batchId);\n\n          case 13:\n            batchNonce = _context.sent;\n            req = {\n              from: account,\n              to: to,\n              token: ZERO_ADDRESS,\n              txGas: gasLimitNum,\n              tokenGasPrice: \"0\",\n              batchId: batchId,\n              batchNonce: parseInt(batchNonce),\n              deadline: Math.floor(Date.now() / 1000 + 3600),\n              data: data\n            };\n            return _context.abrupt(\"return\", {\n              request: req\n            });\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function buildForwardTxRequest(_x, _x2, _x3, _x4, _x5) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar getDomainSeperator = function getDomainSeperator(biconomyForwarderDomainData) {\n  var domainSeparator = ethers.utils.keccak256(ethers.utils.defaultAbiCoder.encode([\"bytes32\", \"bytes32\", \"bytes32\", \"address\", \"bytes32\"], [ethers.utils.id(\"EIP712Domain(string name,string version,address verifyingContract,bytes32 salt)\"), ethers.utils.id(biconomyForwarderDomainData.name), ethers.utils.id(biconomyForwarderDomainData.version), biconomyForwarderDomainData.verifyingContract, biconomyForwarderDomainData.salt]));\n  return domainSeparator;\n};\n\nmodule.exports = {\n  buildForwardTxRequest: buildForwardTxRequest,\n  getDomainSeperator: getDomainSeperator\n};"]},"metadata":{},"sourceType":"script"}