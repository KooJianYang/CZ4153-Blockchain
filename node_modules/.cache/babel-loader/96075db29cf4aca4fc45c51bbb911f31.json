{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Koo Jian Yang\\\\Desktop\\\\myTokenTransact\\\\token-dapp\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from \"react\";\nimport Web3 from 'web3';\nimport { Biconomy } from \"@biconomy/mexa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAddress = \"0x110E9526b51DCE76EebBFefc75EEe6B87233af0D\";\nconst contractAbi = [{\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"senderAddress\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"address\",\n    \"name\": \"recipientAddress\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"uint256\",\n    \"name\": \"tokenValue\",\n    \"type\": \"uint256\"\n  }, {\n    \"internalType\": \"uint256\",\n    \"name\": \"tokenReward\",\n    \"type\": \"uint256\"\n  }, {\n    \"internalType\": \"bytes32\",\n    \"name\": \"sigR\",\n    \"type\": \"bytes32\"\n  }, {\n    \"internalType\": \"bytes32\",\n    \"name\": \"sigS\",\n    \"type\": \"bytes32\"\n  }, {\n    \"internalType\": \"uint8\",\n    \"name\": \"sigV\",\n    \"type\": \"uint8\"\n  }],\n  \"name\": \"metaTransfer\",\n  \"outputs\": [{\n    \"internalType\": \"bool\",\n    \"name\": \"\",\n    \"type\": \"bool\"\n  }],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"_token\",\n    \"type\": \"address\"\n  }],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"constructor\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"nonces\",\n  \"outputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"token\",\n  \"outputs\": [{\n    \"internalType\": \"contract ERC20Permit\",\n    \"name\": \"\",\n    \"type\": \"address\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}];\nlet domainData = {\n  name: \"TokenTransaction\",\n  version: \"1\",\n  chainId: \"4\",\n  // Rinkeby\n  verifyingContract: \"0x110E9526b51DCE76EebBFefc75EEe6B87233af0D\" //tokenAddress\n\n};\nconst metaTransactionType = [{\n  name: \"owner\",\n  type: \"address\"\n}, {\n  name: \"spender\",\n  type: \"address\"\n}, {\n  name: \"value\",\n  type: \"uint256\"\n}, {\n  name: \"nonce\",\n  type: \"uint256\"\n}, {\n  name: \"deadline\",\n  type: \"uint256\"\n}];\nconst domainType = [{\n  name: \"name\",\n  type: \"string\"\n}, {\n  name: \"version\",\n  type: \"string\"\n}, {\n  name: \"chainId\",\n  type: \"uint256\"\n}, {\n  name: \"verifyingContract\",\n  type: \"address\"\n}];\nlet web3;\nlet contract;\n\nfunction App() {\n  _s();\n\n  const [token, setToken] = useState(\"Default Token is DAI\");\n  const [recipientAddress, setRecipient] = useState(0);\n  const [tokenValue, setValue] = useState(0);\n  const [tokenReward, setReward] = useState(0); // const [quote, setQuote] = useState(\"This is a default quote\");\n  // const [newQuote, setNewQuote] = useState(\"\");\n\n  useEffect(() => {\n    if (!window.ethereum) {\n      console.log(\"Metamask is required to use this DApp\");\n      return;\n    }\n\n    const biconomy = new Biconomy(window.ethereum, {\n      apiKey: \"6yawG_gFB.71f09ba2-fb4d-4994-87c3-17521e977a52\"\n    });\n    web3 = new Web3(biconomy);\n    biconomy.onEvent(biconomy.READY, async () => {\n      // Initialize your dapp here like getting user accounts etc\n      await window.ethereum.enable();\n      contract = new web3.eth.Contract(contractAbi, contractAddress);\n      startApp();\n    }).onEvent(biconomy.ERROR, (error, message) => {\n      // Handle error while initializing mexa\n      console.log(error);\n    });\n  }, []);\n\n  const onRecipientInput = event => {\n    setRecipient(event.target.value);\n  };\n\n  const onValueInput = event => {\n    setValue(event.target.value);\n  };\n\n  const onRewardInput = event => {\n    setReward(event.target.value);\n  };\n\n  async function startApp() {// const result = await contract.methods.token(window.ethereum.selectedAddress).call();\n    // setToken(result);\n  }\n\n  async function onButtonClickMeta() {\n    console.log(window.ethereum.selectedAddress);\n    console.log(contract);\n    let nonce = await contract.methods.nonces(window.ethereum.selectedAddress).call();\n    let message = {};\n    message.owner = window.ethereum.selectedAddress;\n    message.spender = 0x110E9526b51DCE76EebBFefc75EEe6B87233af0D; //contract address\n\n    message.value = tokenValue;\n    message.nonce = parseInt(nonce);\n    message.deadline = deadline;\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain: domainType,\n        MetaTransaction: metaTransactionType\n      },\n      primaryType: \"MetaTransaction\",\n      domain: domainData,\n      message: message\n    });\n    web3.currentProvider.sendAsync({\n      jsonrpc: \"2.0\",\n      id: 999999999999,\n      method: \"eth_signTypedData_v4\",\n      params: [window.ethereum.selectedAddress, dataToSign]\n    }, async function (err, result) {\n      if (err) {\n        return console.error(err);\n      }\n\n      const signature = result.result.substring(2);\n      const r = \"0x\" + signature.substring(0, 64);\n      const s = \"0x\" + signature.substring(64, 128);\n      const v = parseInt(signature.substring(128, 130), 16);\n      console.log(signature);\n      await contract.methods.metaTransfer(window.ethereum.selectedAddress, recipientAddress, tokenValue, tokenReward, r, s, v).send({\n        from: window.ethereum.selectedAddress\n      });\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [\"*Use this DApp only on Rinkeby Network\", /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Token Transfer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"main\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-wrap mb-style-2\",\n          children: /*#__PURE__*/_jsxDEV(\"blockquote\", {\n            cite: \"http://www.gutenberg.org/ebboks/11\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [token, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submit-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recipient-address\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              size: \"100\",\n              \"border-radius\": \"15\",\n              type: \"text\",\n              placeholder: \"Recipient Address\",\n              onChange: onRecipientInput,\n              value: recipientAddress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"token-value\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              size: \"100\",\n              \"border-radius\": \"15\",\n              type: \"text\",\n              placeholder: \"Amount to Send\",\n              onChange: onValueInput,\n              value: tokenValue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reward-value\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              size: \"100\",\n              \"border-radius\": \"15\",\n              type: \"text\",\n              placeholder: \"Amount to give relayer\",\n              onChange: onRewardInput,\n              value: tokenReward\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"button\",\n              onClick: onButtonClickMeta,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"VR5IcRfpjbzADEAMYrJYJrANxEY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Koo Jian Yang/Desktop/myTokenTransact/token-dapp/src/App.js"],"names":["React","useState","useEffect","Web3","Biconomy","contractAddress","contractAbi","domainData","name","version","chainId","verifyingContract","metaTransactionType","type","domainType","web3","contract","App","token","setToken","recipientAddress","setRecipient","tokenValue","setValue","tokenReward","setReward","window","ethereum","console","log","biconomy","apiKey","onEvent","READY","enable","eth","Contract","startApp","ERROR","error","message","onRecipientInput","event","target","value","onValueInput","onRewardInput","onButtonClickMeta","selectedAddress","nonce","methods","nonces","call","owner","spender","parseInt","deadline","dataToSign","JSON","stringify","types","EIP712Domain","MetaTransaction","primaryType","domain","currentProvider","sendAsync","jsonrpc","id","method","params","err","result","signature","substring","r","s","v","metaTransfer","send","from"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from \"react\";\nimport Web3 from 'web3';\nimport { Biconomy } from \"@biconomy/mexa\";\n\nconst contractAddress = \"0x110E9526b51DCE76EebBFefc75EEe6B87233af0D\"\n\nconst contractAbi =[\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"senderAddress\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"recipientAddress\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenValue\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenReward\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"sigR\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"sigS\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint8\",\n\t\t\t\t\"name\": \"sigV\",\n\t\t\t\t\"type\": \"uint8\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"metaTransfer\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"_token\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"constructor\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"nonces\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"token\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"contract ERC20Permit\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t}\n]\n\nlet domainData = {\n  name: \"TokenTransaction\",\n  version: \"1\",\n  chainId : \"4\", // Rinkeby\n  verifyingContract: \"0x110E9526b51DCE76EebBFefc75EEe6B87233af0D\" //tokenAddress\n};\n\nconst metaTransactionType = [\n  { name: \"owner\", type: \"address\" },\n  { name: \"spender\", type: \"address\" },\n  { name: \"value\", type: \"uint256\" },\n  { name: \"nonce\", type: \"uint256\" },\n  { name: \"deadline\", type: \"uint256\" }\n];\n\nconst domainType = [\n  { name: \"name\", type: \"string\" },\n  { name: \"version\", type: \"string\" },\n  { name: \"chainId\", type: \"uint256\" },\n  { name: \"verifyingContract\", type: \"address\" }\n];\n\nlet web3;\nlet contract;\n\nfunction App() {\n\n  const [token, setToken] = useState(\"Default Token is DAI\");\n  \n  const [recipientAddress, setRecipient] = useState(0);\n  const [tokenValue, setValue] = useState(0);\n  const [tokenReward, setReward] = useState(0);\n  // const [quote, setQuote] = useState(\"This is a default quote\");\n  // const [newQuote, setNewQuote] = useState(\"\");\n\n  useEffect(() => {\n\n    if (!window.ethereum) {\n      console.log(\"Metamask is required to use this DApp\")\n      return;\n    }\n\n    const biconomy = new Biconomy(window.ethereum,{apiKey: \"6yawG_gFB.71f09ba2-fb4d-4994-87c3-17521e977a52\"});\n    web3 = new Web3(biconomy);\n\n    biconomy.onEvent(biconomy.READY, async () => {\n      // Initialize your dapp here like getting user accounts etc\n      await window.ethereum.enable();\n      contract = new web3.eth.Contract(contractAbi , contractAddress);\n      startApp();\n    }).onEvent(biconomy.ERROR, (error, message) => {\n      // Handle error while initializing mexa\n      console.log(error)\n    });\n\n  }, []);\n\n  \n  const onRecipientInput = event => {\n    setRecipient(event.target.value);\n  };\n  \n  const onValueInput = event => {\n    setValue(event.target.value);\n  };\n    \n  const onRewardInput = event => {\n    setReward(event.target.value);\n  };\n\n  async function startApp() {\n    // const result = await contract.methods.token(window.ethereum.selectedAddress).call();\n    // setToken(result);\n  }\n\n  async function onButtonClickMeta() {\n    console.log(window.ethereum.selectedAddress)\n    console.log(contract)\n    let nonce = await contract.methods.nonces(window.ethereum.selectedAddress).call();\n    let message = {};\n    message.owner = window.ethereum.selectedAddress;\n    message.spender = 0x110E9526b51DCE76EebBFefc75EEe6B87233af0D  //contract address\n    message.value = tokenValue;\n    message.nonce = parseInt(nonce);\n    message.deadline = deadline;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain: domainType,\n        MetaTransaction: metaTransactionType\n      },\n      primaryType: \"MetaTransaction\",\n      domain: domainData,\n      message: message\n    });\n\n    web3.currentProvider.sendAsync(\n      {\n          jsonrpc: \"2.0\",\n          id: 999999999999,\n          method: \"eth_signTypedData_v4\",\n          params: [window.ethereum.selectedAddress, dataToSign]\n      },\n\n      async function (err, result) {\n          if (err) {\n              return console.error(err);\n          }\n          const signature = result.result.substring(2);\n          const r = \"0x\" + signature.substring(0, 64);\n          const s = \"0x\" + signature.substring(64, 128);\n          const v = parseInt(signature.substring(128, 130), 16);\n\n          \n          console.log(signature)\n\n          await contract.methods\n          .metaTransfer(window.ethereum.selectedAddress, recipientAddress, tokenValue, tokenReward, r, s, v)\n          .send({\n            from: window.ethereum.selectedAddress\n          });\n        }\n\n        );\n    }\n\n  \n  return (\n    <div className=\"App\">\n      *Use this DApp only on Rinkeby Network\n      <header className=\"App-header\">\n        <h1>Token Transfer</h1>\n        <section className=\"main\">\n          <div className=\"mb-wrap mb-style-2\">\n            <blockquote cite=\"http://www.gutenberg.org/ebboks/11\">\n              <h4>{token} </h4>\n            </blockquote>\n          </div>\n        </section>\n        <section>\n          <div className=\"submit-container\">\n            <div className=\"recipient-address\">\n              <input size=\"100\"\n                border-radius=\"15\"\n                type=\"text\"\n                placeholder=\"Recipient Address\"\n                onChange={onRecipientInput}\n                value={recipientAddress}\n              />\n            </div>\n            <div className=\"token-value\">\n              <input size=\"100\"\n                border-radius=\"15\"\n                type=\"text\"\n                placeholder=\"Amount to Send\"\n                onChange={onValueInput}\n                value={tokenValue}\n              />\n            </div>\n            <div className=\"reward-value\">\n              <input size=\"100\"\n                border-radius=\"15\"\n                type=\"text\"\n                placeholder=\"Amount to give relayer\"\n                onChange={onRewardInput}\n                value={tokenReward}\n              />\n              <button type=\"button\" className=\"button\" onClick={onButtonClickMeta}>Submit</button>\n            </div>\n          </div>\n        </section>\n      </header>\n    </div >\n  );\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}